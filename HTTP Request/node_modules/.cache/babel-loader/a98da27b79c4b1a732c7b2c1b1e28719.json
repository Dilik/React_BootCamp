{"ast":null,"code":"var _jsxFileName = \"/Users/1989deny/Desktop/React_BootCamp/HTTP Request/src/App.js\";\nimport React, { useState } from 'react';\nimport MoviesList from './components/MoviesList';\nimport './App.css';\n\nfunction App() {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  async function fetchMovieHandler() {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const res = await fetch('https://swapi.dev/api/films/');\n      const data = await res.json();\n      const transformedMovies = data.results.map(movieData => {\n        return {\n          id: movieData.episode_id,\n          title: movieData.title,\n          openingText: movieData.opening_crawl,\n          releaseDate: movieData.release_date\n        };\n      });\n      setMovies(transformedMovies);\n      setIsLoading(false);\n    } catch (error) {\n      setError(error.message);\n    }\n  }\n\n  ;\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: fetchMovieHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, \"Fetch Movies\")), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, !isLoading && /*#__PURE__*/React.createElement(MoviesList, {\n    movies: movies,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 24\n    }\n  }), !isLoading && movies.length === 0 && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 47\n    }\n  }, \"No Movies Found\"), isLoading && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 23\n    }\n  }, \"Loading... \")));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/1989deny/Desktop/React_BootCamp/HTTP Request/src/App.js"],"names":["React","useState","MoviesList","App","movies","setMovies","isLoading","setIsLoading","error","setError","fetchMovieHandler","res","fetch","data","json","transformedMovies","results","map","movieData","id","episode_id","title","openingText","opening_crawl","releaseDate","release_date","message","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAO,WAAP;;AAEA,SAASC,GAAT,GAAe;AAEb,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBJ,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,IAAD,CAAlC;;AAEA,iBAAeS,iBAAf,GAAmC;AACjCH,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAE,IAAAA,QAAQ,CAAC,IAAD,CAAR;;AACA,QAAI;AACF,YAAME,GAAG,GAAG,MAAMC,KAAK,CAAC,8BAAD,CAAvB;AACA,YAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;AAEA,YAAMC,iBAAiB,GAAGF,IAAI,CAACG,OAAL,CAAaC,GAAb,CAAiBC,SAAS,IAAI;AACtD,eAAO;AACLC,UAAAA,EAAE,EAAED,SAAS,CAACE,UADT;AAELC,UAAAA,KAAK,EAAEH,SAAS,CAACG,KAFZ;AAGLC,UAAAA,WAAW,EAAEJ,SAAS,CAACK,aAHlB;AAILC,UAAAA,WAAW,EAAEN,SAAS,CAACO;AAJlB,SAAP;AAMD,OAPyB,CAA1B;AAQApB,MAAAA,SAAS,CAACU,iBAAD,CAAT;AACAR,MAAAA,YAAY,CAAC,KAAD,CAAZ;AAED,KAfD,CAeE,OAAMC,KAAN,EAAY;AACZC,MAAAA,QAAQ,CAACD,KAAK,CAACkB,OAAP,CAAR;AACD;AAEF;;AAAA;AAED,sBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,OAAO,EAAEhB,iBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CADF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAACJ,SAAD,iBAAc,oBAAE,UAAF;AAAa,IAAA,MAAM,EAAEF,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADjB,EAEG,CAACE,SAAD,IAAcF,MAAM,CAACuB,MAAP,KAAkB,CAAhC,iBAAqC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAFxC,EAGGrB,SAAS,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAHhB,CAJF,CADF;AAYD;;AAED,eAAeH,GAAf","sourcesContent":["import React, { useState } from 'react';\n\nimport MoviesList from './components/MoviesList';\nimport './App.css';\n\nfunction App() {\n\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null)\n\n  async function fetchMovieHandler() {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const res = await fetch('https://swapi.dev/api/films/')\n      const data = await res.json();\n\n      const transformedMovies = data.results.map(movieData => {\n        return {\n          id: movieData.episode_id,\n          title: movieData.title,\n          openingText: movieData.opening_crawl,\n          releaseDate: movieData.release_date\n        }\n      });\n      setMovies(transformedMovies);\n      setIsLoading(false);\n\n    } catch(error){\n      setError(error.message);\n    }\n    \n  };\n\n  return (\n    <React.Fragment>\n      <section>\n        <button onClick={fetchMovieHandler}>Fetch Movies</button>\n      </section>\n      <section>\n        {!isLoading && < MoviesList movies={movies} />}\n        {!isLoading && movies.length === 0 && <p>No Movies Found</p>}\n        {isLoading && <p>Loading... </p>}\n      </section>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}